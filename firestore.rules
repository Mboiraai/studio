
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any profile, but only write to their own.
    match /profiles/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
      allow delete: if false;
    }

    // Rules for chat rooms.
    match /chats/{chatId} {
      // A user can get a chat document if they are a participant.
      // This is required for the message rules below to work.
      allow get: if request.auth.uid in resource.data.participants;

      // A user can create a chat document if they are in the participants list
      // of the new document, and there are exactly two participants.
      allow create: if request.auth.uid in request.resource.data.participants
                    && request.resource.data.participants.size() == 2;

      // A participant can update the chat document (e.g., to update the
      // lastMessage field), but cannot change the list of participants.
      allow update: if request.auth.uid in resource.data.participants
                    && request.resource.data.participants == resource.data.participants;

      // Users cannot list all chats or delete them.
      allow list, delete: if false;

      // Rules for messages within a chat.
      match /messages/{messageId} {
        
        // Helper function to safely check if a user is in a chat.
        // It first checks if the chat document exists before accessing its data.
        function isChatParticipant() {
          return exists(/databases/$(database)/documents/chats/$(chatId)) &&
                 get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);
        }
        
        // A user can read messages in a chat if they are a participant.
        allow read: if isChatParticipant();

        // A user can create a message if they are a participant and the senderId matches their own UID.
        allow create: if isChatParticipant()
                      && request.resource.data.senderId == request.auth.uid;

        // Messages are immutable; they cannot be updated or deleted.
        allow update, delete: if false;
      }
    }
  }
}
