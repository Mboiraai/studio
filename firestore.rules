
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users: Can read anyone's profile, but only write to their own.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId);
    }

    // Chats:
    match /chats/{chatId} {
      // Participants can read.
      allow read: if isSignedIn() && request.auth.uid in resource.data.participants;
      
      // A user can create a chat if they are one of the participants.
      // And a chat must have exactly two participants.
      allow create: if isSignedIn() 
                    && request.auth.uid in request.resource.data.participants
                    && request.resource.data.participants.size() == 2;

      // A participant can update a chat (e.g. for lastMessage), 
      // but they cannot change the participants list.
      allow update: if isSignedIn() 
                    && request.auth.uid in resource.data.participants
                    && request.resource.data.participants == resource.data.participants;

      // Disallow deleting chat logs for user safety.
      allow delete: if false; 
    }

    // Messages: Sub-collection of chats.
    match /chats/{chatId}/messages/{messageId} {
      // Participants of the parent chat can read messages.
      allow read: if isSignedIn() 
                  && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;

      // A participant can create a message, and they must be the sender.
      allow create: if isSignedIn() 
                    && request.auth.uid == request.resource.data.senderId 
                    && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;

      // A user can only update or delete their own messages.
      allow update, delete: if isSignedIn() && request.auth.uid == resource.data.senderId;
    }
  }
}
